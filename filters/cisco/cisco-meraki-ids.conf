filter {
    if [type] == "syslog" {
        if ([message] =~ /meraki/) or ([message] =~ /\bids-alerts\b/) or ([message] =~ /\bsecurity_event ids_alerted\b/) or ([message] =~ /\bsecurity_event security_filtering_file_scanned\b/) or ([message] =~ /\bsecurity_event security_filtering_disposition_change\b/) {
        mutate {
            add_field => {
                "dataType" => "firewall-meraki"
            }
            rename => {
                "host" => "dataSource"
            }
        }

        mutate {
            gsub => ["message", "[\r]", ""]
        }

        mutate {
            add_field => {
                "[logx][meraki][kind]" => "ids-alerts"
            }
        }

        if [message] =~ /\bsecurity_event ids_alerted\b/ {
            mutate {
                add_field => {
                    "[logx][meraki][kindTags]" => "security_event ids_alerted"
                }
            }
        }
        else if [message] =~ /\bsecurity_event security_filtering_file_scanned\b/ {
            mutate {
                add_field => {
                    "[logx][meraki][kindTags]" => "security_event security_filtering_file_scanned"
                }
            }
        }
        else if [message] =~ /\bsecurity_event security_filtering_disposition_change\b/ {
            mutate {
                add_field => {
                    "[logx][meraki][kindTags]" => "security_event security_filtering_disposition_change"
                }
            }
        }

        if [logx][meraki][kindTags] {
            mutate {
                split => {
                    "[logx][meraki][kindTags]" => " "
                }
            }
        }

        grok {
            match => {
                "message" => "%{GREEDYDATA:before} ids-alerts %{GREEDYDATA:after}"
            }
            match => {
                "message" => "%{GREEDYDATA:before} security_event ids_alerted %{GREEDYDATA:after}"
            }
            match => {
                "message" => "%{GREEDYDATA:before} security_event security_filtering_file_scanned %{GREEDYDATA:after}"
            }
            match => {
                "message" => "%{GREEDYDATA:before} security_event security_filtering_disposition_change %{GREEDYDATA:after}"
            }
        }

        if [before] {
            grok {
                match => {
                    "before" => "%{TIMESTAMP_ISO8601:timestamp} %{IP:ip} %{INT:bytes} %{BASE10NUM:epoch_time} %{WORD:device_name}"
                }
                match => {
                    "before" => "%{CISCOTIMESTAMP:timestamp} %{IP:ip} %{INT:bytes} %{BASE10NUM:epoch_time} %{WORD:device_name}"
                }
                match => {
                    "before" => "%{BASE10NUM:epoch_time} %{WORD:device_name}"
                }
            }
            if [epoch_time] {
                date {
                    match => ["epoch_time", "UNIX"]
                }
            }
            else if [timestamp] {
                date {
                    match => ["timestamp", "UNIX"]
                }
            }
            if [ip] {
                mutate {
                    rename => {
                        "ip" => "[logx][meraki][ip]"
                    }
                }
            }
            if [bytes] {
                mutate {
                    rename => {
                        "bytes" => "[logx][meraki][bytes]"
                    }
                    convert => {
                        "[logx][meraki][bytes]" => "integer"
                    }
                }
            }
            if [device_name] {
                mutate {
                    rename => {
                        "device_name" => "[logx][meraki][deviceName]"
                    }
                }
            }
            mutate {
                remove_field => ["before", "epoch_time", "timestamp"]
            }
        }
        if [after] {
            if [after] =~ /\bsignature\b=/ {
                grok {
                    match => {
                        "after" => "signature=%{DATA:signature} %{GREEDYDATA}"
                    }
                }
                mutate {
                    rename => {
                        "signature" => "[logx][meraki][details][signature]"
                    }
                }
            }
            if [after] =~ /\bpriority\b=/ {
                grok {
                    match => {
                        "after" => "priority=%{DATA:priority} %{GREEDYDATA}"
                    }
                }
                if [priority] == "1" {
                    mutate {
                        add_field => {
                            "[logx][meraki][details][priorityLabel]" => "High"
                        }
                    }
                }
                else if [priority] == "2" {
                    mutate {
                        add_field => {
                            "[logx][meraki][details][priorityLabel]" => "Medium"
                        }
                    }
                }
                else if [priority] == "3" {
                    mutate {
                        add_field => {
                            "[logx][meraki][details][priorityLabel]" => "Low"
                        }
                    }
                }
                else if [priority] == "4" {
                    mutate {
                        add_field => {
                            "[logx][meraki][details][priorityLabel]" => "Very Low"
                        }
                    }
                }
                mutate {
                    rename => {
                        "priority" => "[logx][meraki][details][priority]"
                    }
                }
            }
            if [after] =~ /\bshost\b=/ {
                grok {
                    match => {
                        "after" => "shost=%{COMMONMAC:shost} %{GREEDYDATA}"
                    }
                }
                mutate {
                    rename => {
                        "shost" => "[logx][meraki][details][sHost]"
                    }
                }
            }
            if [after] =~ /\bdhost\b=/ {
                grok {
                    match => {
                        "after" => "dhost=%{COMMONMAC:dhost} %{GREEDYDATA}"
                    }
                }
                mutate {
                    rename => {
                        "dhost" => "[logx][meraki][details][dHost]"
                    }
                }
            }
            if [after] =~ /\bdirection\b=/ {
                grok {
                    match => {
                        "after" => "dhost=%{WORD:direction} %{GREEDYDATA}"
                    }
                }
                mutate {
                    rename => {
                        "direction" => "[logx][meraki][details][direction]"
                    }
                }
            }
            if [after] =~ /\bproto\b=/ {
                grok {
                    match => {
                        "after" => "proto=%{DATA:proto} %{GREEDYDATA}"
                    }
                }
                mutate {
                    rename => {
                        "proto" => "[logx][meraki][proto]"
                    }
                }
            }
            if [after] =~ /\bsrc\b=/ {
                grok {
                    match => {
                        "after" => "src=%{IPV4:src_ip}:%{WORD:src_port} %{GREEDYDATA}"
                    }
                }
                mutate {
                    rename => {
                        "src_ip" => "[logx][meraki][src_ip]"
                        "src_port" => "[logx][meraki][src_port]"
                    }
                    convert => {
                        "[logx][meraki][details][srcPort]" => "integer"
                    }
                }
            }
            if [after] =~ /\bdst\b=/ {
                grok {
                    match => {
                        "after" => "dst=%{IPV4:dst_ip}:%{WORD:dst_port} %{GREEDYDATA}"
                    }
                }
                mutate {
                    rename => {
                        "dst_ip" => "[logx][meraki][dest_ip]"
                        "dst_port" => "[logx][meraki][dest_port]"
                    }
                    convert => {
                        "[logx][meraki][details][destPort]" => "integer"
                    }
                }
            }
            if ([after] =~ /\bmessage: \b/) or ([after] =~ /\bmessage\b=/) {
                grok {
                    match => {
                        "after" => "message: %{GREEDYDATA:ids_message}"
                    }
                    match => {
                        "after" => "message=%{GREEDYDATA:ids_message}"
                    }
                }
                mutate {
                    rename => {
                        "ids_message" => "[logx][meraki][details][message]"
                    }
                }
            }
            if [after] =~ /\burl\b=/ {
                grok {
                    match => {
                        "after" => "url=%{DATA:url} %{GREEDYDATA}"
                    }
                }
                mutate {
                    rename => {
                        "url" => "[logx][meraki][details][url]"
                    }
                }
            }
            if [after] =~ /\bmac\b=/ {
                grok {
                    match => {
                        "after" => "mac=%{COMMONMAC:mac} %{GREEDYDATA}"
                    }
                }
                mutate {
                    rename => {
                        "mac" => "[logx][meraki][details][mac]"
                    }
                }
            }
            if [after] =~ /\bname\b=/ {
                grok {
                    match => {
                        "after" => "name='%{GREEDYDATA:name}'"
                    }
                    match => {
                        "after" => "name=%{GREEDYDATA:name} %{GREEDYDATA}"
                    }
                }
                mutate {
                    rename => {
                        "mac" => "[logx][meraki][details][name]"
                    }
                }
            }
            if [after] =~ /\bsha256\b=/ {
                grok {
                    match => {
                        "after" => "sha256=%{DATA:sha256} %{GREEDYDATA}'"
                    }
                }
                mutate {
                    rename => {
                        "mac" => "[logx][meraki][details][sha256]"
                    }
                }
            }
            if [after] =~ /\bdisposition\b=/ {
                grok {
                    match => {
                        "after" => "disposition=%{DATA:sha256} %{GREEDYDATA}'"
                    }
                }
                mutate {
                    rename => {
                        "mac" => "[logx][meraki][details][disposition]"
                    }
                }
            }
            if [after] =~ /\baction\b=/ {
                grok {
                    match => {
                        "after" => "action=%{DATA:action} %{GREEDYDATA}'"
                    }
                }
                mutate {
                    rename => {
                        "mac" => "[logx][meraki][details][action]"
                    }
                }
            }
            mutate {
                remove_field => ["after"]
            }
        }
        mutate {
            remove_field => ["path", "@version", "message", "tags"]
        }
    }
    }
}