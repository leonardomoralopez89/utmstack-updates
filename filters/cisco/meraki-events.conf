filter {
  if [type] == "syslog" {
    grok {
      match => {
        "message" => [
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{DATA:b} %{DATA:log_type} %{GREEDYDATA:message_text}: %{IP:src_ip}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{DATA:b} %{DATA:log_type} dhcp lease of ip %{IP:src_ip} from server mac %{MAC:src_mac} %{GREEDYDATA:c} %{MAC:dest_mac} %{GREEDYDATA:d} %{IP:dest_ip} %{GREEDYDATA:rest}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{DATA:b} %{DATA:log_type} content_filtering_block url=%{GREEDYDATA:url} category0=%{DATA:category} server=%{DATA:src_ip} client_mac=%{DATA:client_mac}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{DATA:b} %{DATA:log_type} dhcp release for mac %{MAC:dest_mac}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{GREEDYDATA:b} %{DATA:log_type} aid=%{DATA:aid} arp_resp=%{DATA:arp_resp} arp_src=%{DATA:arp_src} auth_neg_dur=%{DATA:auth_neg_dur} auth_neg_failed=%{DATA:auth_neg_failed} channel=%{DATA:channel} dns_req_rtt=%{DATA:dns_req_rtt} dns_resp=%{DATA:dns_resp} dns_server=%{DATA:dns_server} duration=%{NUMBER:duration} full_conn=%{DATA:full_conn} identity=%{DATA:identity} ip_resp=%{DATA:ip_resp} ip_src=%{IP:src_ip} is_8021x=%{DATA:is_8021x} is_wpa=%{DATA:is_wpa} last_auth_ago=%{DATA:last_auth_ago} radio=%{DATA:radio} reason=%{DATA:reason} rssi=%{DATA:rssi} type=%{DATA:event_type} vap=%{DATA:vap} client_mac=%{MAC:client_mac} client_ip=%{IP:client_ip} instigator=%{DATA:instigator} http_resp=%{DATA:http_resp} dhcp_lease_completed=%{DATA:dhcp_lease_completed} dhcp_ip=%{DATA:dhcp_ip} dhcp_server=%{DATA:dhcp_server} dhcp_server_mac=%{DATA:dhcp_server_mac} dhcp_resp=%{DATA:dhcp_resp} url=%{GREEDYDATA:url} category0=%{DATA:category} server=%{IPORHOST:server} vpn_type=%{DATA:vpn_type} connectivity=%{DATA:connectivity}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{DATA:b} %{WORD:log_type} %{DATA:action} url=%{GREEDYDATA:url} category0=%{DATA:category} server=%{DATA:server}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{DATA:b} %{DATA:log_type} signature=%{DATA:signature} priority=%{DATA:priority} timestamp=%{DATA:tsp}protocol=%{DATA:protocol} src=%{IP:src_ip} dst=%{IP:dest_ip}message: %{GREEDYDATA:message_text}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{DATA:b} %{DATA:log_type} %{DATA:rest} %{MAC:src_mac}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{DATA:b} %{DATA:log_type} %{GREEDYDATA:rest}"
        ]
      }
    }
  }
  if [log_type] == "events" {
    mutate {
      add_field => {
        "dataType" => "firewall-meraki-events"
      }
      rename => {
        "host" => "dataSource"
      }
      rename => {
        "event_id" => "[logx][meraki][events][eventID]"
      }
      rename => {
        "log_type" => "[logx][meraki][events][log_type]"
      }
      rename => {
        "src_ip" => "[logx][meraki][events][sourceIP]"
      }
      rename => {
        "message_text" => "[logx][meraki][events][message_text]"
      }
      rename => {
        "src_mac" => "[logx][meraki][events][src_mac]"
      }
      rename => {
        "client_mac" => "[logx][meraki][events][client_mac]"
      }
      rename => {
        "dest_ip" => "[logx][meraki][events][dest_ip]"
      }
      rename => {
        "dest_mac" => "[logx][meraki][events][dest_mac]"
      }
      rename => {
        "category" => "[logx][meraki][events][category]"
      }
      rename => {
        "url" => "[logx][meraki][events][url]"
      }
      rename => {
        "action" => "[logx][meraki][events][action]"
      }
      rename => {
        "aid" => "[logx][meraki][events][aid]"
      }
      rename => {
        "dns_server" => "[logx][meraki][events][dns_server]"
      }
      rename => {
        "auth_neg_failed" => "[logx][meraki][events][auth_neg_failed]"
      }
      rename => {
        "instigator" => "[logx][meraki][events][instigator]"
      }
      rename => {
        "http_resp" => "[logx][meraki][events][http_resp]"
      }
      rename => {
        "dns_req_rtt" => "[logx][meraki][events][dns_req_rtt]"
      }
      rename => {
        "vap" => "[logx][meraki][events][vap]"
      }
      rename => {
        "client_ip" => "[logx][meraki][events][client_ip]"
      }
      rename => {
        "vpn_type" => "[logx][meraki][events][vpn_type]"
      }
      rename => {
        "dns_resp" => "[logx][meraki][events][dns_resp]"
      }
      rename => {
        "event_type" => "[logx][meraki][events][event_type]"
      }
      rename => {
        "dhcp_ip" => "[logx][meraki][events][dhcp_ip]"
      }
      rename => {
        "rssi" => "[logx][meraki][events][rssi]"
      }
      rename => {
        "radio" => "[logx][meraki][events][radio]"
      }
      rename => {
        "full_conn" => "[logx][meraki][events][full_conn]"
      }
      rename => {
        "arp_resp" => "[logx][meraki][events][arp_resp]"
      }
      rename => {
        "last_auth_ago" => "[logx][meraki][events][last_auth_ago]"
      }
      rename => {
        "server" => "[logx][meraki][events][server]"
      }
      rename => {
        "ip_resp" => "[logx][meraki][events][ip_resp]"
      }
      rename => {
        "duration" => "[logx][meraki][events][duration]"
      }
      rename => {
        "dhcp_resp" => "[logx][meraki][events][dhcp_resp]"
      }
      rename => {
        "dhcp_lease_completed" => "[logx][meraki][events][dhcp_lease_completed]"
      }
      rename => {
        "is_wpa" => "[logx][meraki][events][is_wpa]"
      }
      rename => {
        "is_8021x" => "[logx][meraki][events][is_8021x]"
      }
      rename => {
        "channel" => "[logx][meraki][events][channel]"
      }
      rename => {
        "arp_src" => "[logx][meraki][events][arp_src]"
      }
      rename => {
        "reason" => "[logx][meraki][events][reason]"
      }
      rename => {
        "identity" => "[logx][meraki][events][identity]"
      }
      rename => {
        "dhcp_server_mac" => "[logx][meraki][events][dhcp_server_mac]"
      }
      rename => {
        "auth_neg_dur" => "[logx][meraki][events][auth_neg_dur]"
      }
      rename => {
        "dhcp_server" => "[logx][meraki][events][dhcp_server]"
      }

      rename => {
        "protocol" => "[logx][meraki][events][protocol]"
      }
      rename => {
        "signature" => "[logx][meraki][events][signature]"
      }
      rename => {
        "priority" => "[logx][meraki][events][priority]"
      }
      remove_field => ["a","b","c","d","@version","path","tags","rest", "tsp","type"]
    }
  }
}