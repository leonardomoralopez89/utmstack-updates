filter {
    if [type] == "syslog" {
        if ([message] =~ /meraki/) or ([message] =~ /\b flows \b/) {
        mutate {
            add_field => {
                "dataType" => "firewall-meraki"
            }
            rename => {
                "host" => "dataSource"
            }
        }

        mutate {
            gsub => ["message", "[\r]", ""]
        }

        if [message] =~ /\bpattern\b:/ {
            grok {
                match => {
                    "message" => "%{CISCOTIMESTAMP:timestamp} %{IP:src_ip} %{INT:bytes} %{BASE10NUM:epoch_time} %{WORD:device_name} %{WORD:kind} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} mac=%{COMMONMAC:mac} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport} pattern: %{GREEDYDATA:pattern}"
                }
                match => {
                    "message" => "%{CISCOTIMESTAMP:timestamp} %{IP:src_ip} %{INT:bytes} %{BASE10NUM:epoch_time} %{WORD:device_name} %{WORD:kind} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport} pattern: %{GREEDYDATA:pattern}"
                }
                match => {
                    "message" => "%{BASE10NUM:epoch_time} %{WORD:device_name} %{WORD:kind} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} mac=%{COMMONMAC:mac} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport} pattern: %{GREEDYDATA:pattern}"
                }
                match => {
                    "message" => "%{BASE10NUM:epoch_time} %{WORD:device_name} %{WORD:kind} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport} pattern: %{GREEDYDATA:pattern}"
                }
                match => {
                    "message" => "%{GREEDYDATA:unknown_info} %{WORD:device_name} %{WORD:kind} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} mac=%{COMMONMAC:mac} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport} pattern: %{GREEDYDATA:pattern}"
                }
                match => {
                    "message" => "%{GREEDYDATA:unknown_info} %{WORD:device_name} %{WORD:kind} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport} pattern: %{GREEDYDATA:pattern}"
                }
                match => {
                    "message" => "%{GREEDYDATA:unknown_info} %{WORD:device_name} flows %{GREEDYDATA:unknown_info}"
                }
            }
        }
        else {
            grok {
                match => {
                    "message" => "%{CISCOTIMESTAMP:timestamp} %{IP:src_ip} %{INT:bytes} %{BASE10NUM:epoch_time} %{WORD:device_name} %{WORD:kind} %{GREEDYDATA:pattern} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} mac=%{COMMONMAC:mac} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport}"
                }
                match => {
                    "message" => "%{CISCOTIMESTAMP:timestamp} %{IP:src_ip} %{INT:bytes} %{BASE10NUM:epoch_time} %{WORD:device_name} %{WORD:kind} %{GREEDYDATA:pattern} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport}"
                }
                match => {
                    "message" => "%{BASE10NUM:epoch_time} %{WORD:device_name} %{WORD:kind} %{GREEDYDATA:pattern} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} mac=%{COMMONMAC:mac} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport}"
                }
                match => {
                    "message" => "%{BASE10NUM:epoch_time} %{WORD:device_name} %{WORD:kind} %{GREEDYDATA:pattern} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport}"
                }
                match => {
                    "message" => "%{GREEDYDATA:unknown_info} %{WORD:device_name} %{WORD:kind} %{GREEDYDATA:pattern} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} mac=%{COMMONMAC:mac} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport}"
                }
                match => {
                    "message" => "%{GREEDYDATA:unknown_info} %{WORD:device_name} %{WORD:kind} %{GREEDYDATA:pattern} src=%{IPV4:src_ip} dst=%{IPV4:dst_ip} proto=%{WORD:proto} sport=%{WORD:sport} dport=%{WORD:dport}"
                }
                match => {
                    "message" => "%{GREEDYDATA:unknown_info} %{WORD:device_name} flows %{GREEDYDATA:unknown_info}"
                }
            }
        }

        if [epoch_time] {
            date {
                match => ["epoch_time", "UNIX"]
            }
        }
        else if [timestamp] {
            date {
                match => ["timestamp", "UNIX"]
            }
        }

        if [ip] {
            mutate {
                rename => {
                    "ip" => "[logx][meraki][ip]"
                }
            }
        }

        if [bytes] {
            mutate {
                rename => {
                    "bytes" => "[logx][meraki][bytes]"
                }

                convert => {
                    "[logx][meraki][bytes]" => "integer"
                }
            }
        }

        if [device_name] {
            mutate {
                rename => {
                    "device_name" => "[logx][meraki][deviceName]"
                }
            }
        }

        if [kind] {
            mutate {
                rename => {
                    "kind" => "[logx][meraki][kind]"
                }
            }
        }

        if [src_ip] {
            mutate {
                rename => {
                    "src_ip" => "[logx][meraki][src_ip]"
                }
            }
        }

        if [sport] {
            mutate {
                rename => {
                    "sport" => "[logx][meraki][src_port]"
                }
                convert => {
                    "logx][meraki][src_port]" => "integer"
                }
            }
        }

        if [dst_ip] {
            mutate {
                rename => {
                    "dst_ip" => "[logx][meraki][dest_ip]"
                }
            }
        }

        if [dport] {
            mutate {
                rename => {
                    "dport" => "[logx][meraki][dest_port]"
                }
                convert => {
                    "[logx][meraki][dest_port]" => "integer"
                }
            }
        }

        if [mac] {
            mutate {
                rename => {
                    "mac" => "[logx][meraki][details][mac]"
                }
            }
        }

        if [proto] {
            mutate {
                rename => {
                    "proto" => "[logx][meraki][proto]"
                }
            }
        }

        if [pattern] {
            mutate {
                rename => {
                    "pattern" => "[logx][meraki][details][pattern]"
                }
            }
        }

        if [unknown_info] {
            mutate {
                add_field => {
                    "[logx][meraki][parsingProblem]" => "Unfamiliar meraki log type."
                }
                add_field => {
                    "[logx][meraki][unknownInfo]" => ["unknown_info"]
                }
            }
        }

        mutate {
            remove_field => ["path", "@version", "message", "tags", "epoch_time", "timestamp"]
        }
    }
    }
}