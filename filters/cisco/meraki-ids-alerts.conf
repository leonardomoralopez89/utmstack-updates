filter {
  if [type] == "syslog" {
    grok {
      match => {
        "message" => [
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{DATA:b} %{DATA:log_type} %{DATA:c} signature=%{DATA:signature} priority=%{DATA:priority} timestamp=%{DATA:tsp}direction=%{DATA:direction} protocol=%{DATA:protocol} src=%{IP:src_ip} dst=%{IP:dst_ip} message: %{GREEDYDATA:fullmessage}",
        "%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:event_id} %{DATA:b} %{DATA:log_type} %{DATA:c} signature=%{DATA:signature} priority=%{DATA:priority} timestamp=%{DATA:tsp}direction=%{DATA:direction} protocol=%{DATA:protocol} src=%{IP:src_ip} dst=%{IP:dst_ip} message: %{GREEDYDATA:fullmessage}",
        "%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:id} %{WORD:a} %{DATA:log_type} %{WORD:a} %{DATA:a} signature=%{WORD:signature} priority=%{WORD:priority} timestamp=%{GREEDYDATA:tsp}protocol=%{WORD:protocol} src=%{IP:src_ip} dst=%{IP:dest_ip}message: %{GREEDYDATA:fullmessage}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:id} %{WORD:a} %{DATA:log_type} %{WORD:a} %{DATA:a} signature=%{WORD:signature} priority=%{WORD:priority} timestamp=%{GREEDYDATA:tsp}protocol=%{WORD:protocol} src=%{IP:src_ip} dst=%{IP:dest_ip}message: %{GREEDYDATA:fullmessage}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:id} %{WORD:a} %{DATA:log_type} %{WORD:a} %{DATA:a} signature=%{WORD:signature} priority=%{WORD:priority} timestamp=%{GREEDYDATA:tsp}direction=%{DATA:direction} protocol=%{DATA:protocol} src=%{IP:src}",
        "%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:id} %{WORD:a} %{DATA:log_type} %{WORD:a} %{DATA:a} signature=%{WORD:signature} priority=%{WORD:priority} timestamp=%{GREEDYDATA:tsp}direction=%{DATA:direction} protocol=%{DATA:protocol} src=%{IP:src}",
        "%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:id} %{WORD:a} %{DATA:log_type} signature=%{WORD:signature} priority=%{WORD:priority} timestamp=%{GREEDYDATA:tsp}direction=%{DATA:direction} protocol=%{DATA:protocol} src=%{IP:src}",
        "<%{NUMBER:count1}>%{GREEDYDATA:tsp} %{IPORHOST:h_ip} %{USERNAME:h_user}: %{WORD:a} %{DATA:id} %{WORD:a} %{DATA:log_type} signature=%{WORD:signature} priority=%{WORD:priority} timestamp=%{GREEDYDATA:tsp}direction=%{DATA:direction} protocol=%{DATA:protocol} src=%{IP:src}"
        ]
      }
    }
  }
  if  "ids-alerts"  in [log_type] {
    mutate {
      add_field => {
        "dataType" => "firewall-meraki-ids-alert"
      }
      rename => {
        "host" => "dataSource"
      }
      rename => {
        "event_id" => "[logx][meraki][events][eventID]"
      }
      rename => {
        "log_type" => "[logx][meraki][events][log_type]"
      }
      rename => {
        "protocol" => "[logx][meraki][events][protocol]"
      }
      rename => {
        "src_ip" => "[logx][meraki][events][sourceIP]"
      }
      rename => {
        "signature" => "[logx][meraki][events][signature]"
      }
      rename => {
        "priority" => "[logx][meraki][events][priority]"
      }
      rename => {
        "direction" => "[logx][meraki][events][direction]"
      }
      remove_field => ["a","b","c","d","@version","path","tags","rest", "tsp","h_ip"]
    }
  }
}